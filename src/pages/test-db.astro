---
import { db } from '../db/index';
import { users, clients, projects, tasks, timeEntries } from '../db/schema';

let result: any = { success: false, message: 'No test run' };

try {
  // Test 1: Create a user
  const [newUser] = await db.insert(users).values({
    name: 'John Doe',
    email: 'john@example.com',
    role: 'admin'
  }).returning();

  // Test 2: Create a client
  const [newClient] = await db.insert(clients).values({
    name: 'Acme Corp',
    createdBy: newUser.id
  }).returning();

  // Test 3: Create a project
  const [newProject] = await db.insert(projects).values({
    name: 'Website Redesign',
    clientId: newClient.id
  }).returning();

  // Test 4: Create a task
  const [newTask] = await db.insert(tasks).values({
    name: 'Design Homepage',
    projectId: newProject.id,
    description: 'Create new homepage design',
    status: 'in_progress'
  }).returning();

  // Test 5: Create a time entry
  const [newTimeEntry] = await db.insert(timeEntries).values({
    taskId: newTask.id,
    userId: newUser.id,
    startTime: new Date(),
    notes: 'Started working on homepage design'
  }).returning();

  // Test 6: Query all data
  const allUsers = await db.select().from(users);
  const allClients = await db.select().from(clients);
  const allProjects = await db.select().from(projects);
  const allTasks = await db.select().from(tasks);
  const allTimeEntries = await db.select().from(timeEntries);

  result = {
    success: true,
    message: 'All database operations successful!',
    data: {
      user: newUser,
      client: newClient,
      project: newProject,
      task: newTask,
      timeEntry: newTimeEntry,
      counts: {
        users: allUsers.length,
        clients: allClients.length,
        projects: allProjects.length,
        tasks: allTasks.length,
        timeEntries: allTimeEntries.length
      }
    }
  };
} catch (error) {
  result = {
    success: false,
    message: 'Database test failed',
    error: error instanceof Error ? error.message : 'Unknown error'
  };
}
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Database Test</title>
</head>
<body>
    <div style="padding: 2rem; font-family: Arial, sans-serif;">
        <h1>Database Schema Test</h1>
        
        <div style="margin: 1rem 0; padding: 1rem; border: 1px solid #ccc; border-radius: 4px;">
            <h2>Test Result:</h2>
            <p><strong>Success:</strong> {result.success ? '✅ Yes' : '❌ No'}</p>
            <p><strong>Message:</strong> {result.message}</p>
            
            {result.error && (
                <div style="background: #fee; padding: 1rem; border-radius: 4px; margin: 1rem 0;">
                    <strong>Error:</strong> {result.error}
                </div>
            )}
            
            {result.success && result.data && (
                <div style="margin-top: 2rem;">
                    <h3>Created Data:</h3>
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem;">
                        <div style="background: #f0f0f0; padding: 1rem; border-radius: 4px;">
                            <h4>User</h4>
                            <pre>{JSON.stringify(result.data.user, null, 2)}</pre>
                        </div>
                        <div style="background: #f0f0f0; padding: 1rem; border-radius: 4px;">
                            <h4>Client</h4>
                            <pre>{JSON.stringify(result.data.client, null, 2)}</pre>
                        </div>
                        <div style="background: #f0f0f0; padding: 1rem; border-radius: 4px;">
                            <h4>Project</h4>
                            <pre>{JSON.stringify(result.data.project, null, 2)}</pre>
                        </div>
                        <div style="background: #f0f0f0; padding: 1rem; border-radius: 4px;">
                            <h4>Task</h4>
                            <pre>{JSON.stringify(result.data.task, null, 2)}</pre>
                        </div>
                        <div style="background: #f0f0f0; padding: 1rem; border-radius: 4px;">
                            <h4>Time Entry</h4>
                            <pre>{JSON.stringify(result.data.timeEntry, null, 2)}</pre>
                        </div>
                    </div>
                    
                    <div style="margin-top: 2rem;">
                        <h3>Database Counts:</h3>
                        <ul>
                            <li>Users: {result.data.counts.users}</li>
                            <li>Clients: {result.data.counts.clients}</li>
                            <li>Projects: {result.data.counts.projects}</li>
                            <li>Tasks: {result.data.counts.tasks}</li>
                            <li>Time Entries: {result.data.counts.timeEntries}</li>
                        </ul>
                    </div>
                </div>
            )}
        </div>
        
        <div style="margin-top: 2rem;">
            <h2>Database Schema Summary:</h2>
            <ul>
                <li><strong>users:</strong> id, email, name, role</li>
                <li><strong>clients:</strong> id, name, created_by</li>
                <li><strong>projects:</strong> id, client_id, name</li>
                <li><strong>tasks:</strong> id, project_id, name, description, status</li>
                <li><strong>task_assignments:</strong> task_id, user_id</li>
                <li><strong>time_entries:</strong> id, task_id, user_id, start_time, end_time, duration_manual, notes</li>
            </ul>
        </div>
    </div>
</body>
</html> 