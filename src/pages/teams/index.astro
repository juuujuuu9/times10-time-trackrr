---
import Layout from '../../layouts/Layout.astro';
import { getSessionUser } from '../../utils/session';
import { getUserTeamDashboards } from '../../utils/teamAccess';

// Get current user
const currentUser = await getSessionUser(Astro);
if (!currentUser) {
  return Astro.redirect('/login');
}

// Get user's team dashboards
const teamDashboards = await getUserTeamDashboards(currentUser.id);
---

<Layout title="Team Dashboard">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="py-6">
          <div class="flex items-center justify-between">
            <div>
              <h1 class="text-3xl font-bold text-gray-900">Team Dashboard</h1>
              <p class="mt-2 text-gray-600">Collaborate with your teams and track progress</p>
            </div>
            <div class="flex space-x-3">
              <button 
                id="createTeamBtn"
                class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md transform hover:scale-105"
              >
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Create Team
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      {teamDashboards.length === 0 ? (
        <!-- Empty State -->
        <div class="text-center py-12">
          <div class="mx-auto h-24 w-24 bg-gray-100 rounded-full flex items-center justify-center mb-4">
            <svg class="h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No teams yet</h3>
          <p class="text-gray-600 mb-6">You're not a member of any teams. Create a team or ask to be invited to one.</p>
          <button 
            id="createFirstTeamBtn"
            class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md transform hover:scale-105"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Create Your First Team
          </button>
        </div>
      ) : (
        <!-- Team Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {teamDashboards.map((team) => (
            <div class="bg-white rounded-lg shadow border border-gray-300 hover:shadow-md transition-all duration-200">
              <div class="p-6">
                <div class="flex items-center justify-between mb-4">
                  <div class="flex items-center">
                    <div class="h-10 w-10 bg-gray-200 rounded-lg flex items-center justify-center">
                      <svg class="h-6 w-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                      </svg>
                    </div>
                    <div class="ml-3">
                      <h3 class="text-lg font-semibold text-gray-900">{team.teamName}</h3>
                      <p class="text-sm text-gray-600">{team.userRole}</p>
                    </div>
                  </div>
                  <div class="flex items-center space-x-2">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      {team.projects.length} projects
                    </span>
                  </div>
                </div>
                
                {team.teamDescription && (
                  <p class="text-gray-600 text-sm mb-4">{team.teamDescription}</p>
                )}
                
                <div class="space-y-2">
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-600">Projects:</span>
                    <span class="font-medium">{team.projects.length}</span>
                  </div>
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-600">Joined:</span>
                    <span class="font-medium">{new Date(team.joinedAt).toLocaleDateString()}</span>
                  </div>
                </div>
                
                <div class="mt-4 pt-4 border-t border-gray-200">
                  <a 
                    href={`/teams/${team.teamId}`}
                    class="w-full inline-flex items-center justify-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md transform hover:scale-105"
                  >
                    View Team Dashboard
                    <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>

  <!-- Create Team Modal -->
  <div id="createTeamModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-semibold text-gray-900">Create New Team</h3>
        </div>
        <form id="createTeamForm" class="px-6 py-4">
          <div class="space-y-4">
            <div>
              <label for="teamName" class="block text-sm font-medium text-gray-700 mb-1">Team Name</label>
              <input 
                type="text" 
                id="teamName" 
                name="teamName"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Enter team name"
              />
            </div>
            <div>
              <label for="teamDescription" class="block text-sm font-medium text-gray-700 mb-1">Description (Optional)</label>
              <textarea 
                id="teamDescription" 
                name="teamDescription"
                rows="3"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Describe what this team does"
              ></textarea>
            </div>
          </div>
          <div class="flex justify-end space-x-3 mt-6">
            <button 
              type="button" 
              id="cancelCreateTeam"
              class="inline-flex items-center px-4 py-2 text-gray-300 bg-gray-700 hover:bg-gray-600 rounded-md transition-all duration-200 font-medium"
            >
              <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
              Cancel
            </button>
            <button 
              type="submit"
              class="inline-flex items-center px-4 py-2 bg-[#415058] hover:bg-[#1F292E] text-white rounded-md transition-all duration-200 font-medium shadow-sm hover:shadow-md"
            >
              <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Create Team
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Team Dashboard JavaScript
  document.addEventListener('DOMContentLoaded', function() {
    const createTeamBtn = document.getElementById('createTeamBtn');
    const createFirstTeamBtn = document.getElementById('createFirstTeamBtn');
    const createTeamModal = document.getElementById('createTeamModal');
    const cancelCreateTeam = document.getElementById('cancelCreateTeam');
    const createTeamForm = document.getElementById('createTeamForm');

    // Show create team modal
    function showCreateTeamModal() {
      createTeamModal?.classList.remove('hidden');
    }

    // Hide create team modal
    function hideCreateTeamModal() {
      createTeamModal?.classList.add('hidden');
      (createTeamForm as HTMLFormElement)?.reset();
    }

    // Event listeners
    createTeamBtn?.addEventListener('click', showCreateTeamModal);
    createFirstTeamBtn?.addEventListener('click', showCreateTeamModal);
    cancelCreateTeam?.addEventListener('click', hideCreateTeamModal);

    // Close modal when clicking outside
    createTeamModal?.addEventListener('click', function(e) {
      if (e.target === createTeamModal) {
        hideCreateTeamModal();
      }
    });

    // Handle form submission
    createTeamForm?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(createTeamForm as HTMLFormElement);
      const teamData = {
        name: formData.get('teamName'),
        description: formData.get('teamDescription')
      };

      try {
        const response = await fetch('/api/teams', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(teamData)
        });

        const result = await response.json();

        if (result.success) {
          // Refresh the page to show the new team
          window.location.reload();
        } else {
          alert('Error creating team: ' + (result.error || 'Unknown error'));
        }
      } catch (error) {
        console.error('Error creating team:', error);
        alert('Error creating team. Please try again.');
      }
    });
  });
</script>
