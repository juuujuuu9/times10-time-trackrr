---
import Layout from '../layouts/Layout.astro';
import { getSessionUser } from '../utils/session';

// Redirect if already logged in
const user = await getSessionUser(Astro);
if (user) {
  if (user.role === 'admin') {
    return Astro.redirect('/admin');
  } else {
    return Astro.redirect('/dashboard');
  }
}
---

<Layout title="Login - Times10 Time Tracker">
  <main class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
    <div class="w-full max-w-md">
      <!-- Logo and Title -->
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold text-gray-800 mb-2">
          Times10
        </h1>
        <p class="text-gray-600">Sign in to your account</p>
      </div>

      <!-- Login Form -->
      <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-200">
        <form id="loginForm" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email Address
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
              placeholder="Enter your email"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Password
            </label>
            <input
              type="password"
              id="password"
              name="password"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
              placeholder="Enter your password"
            />
          </div>

          <div id="errorMessage" class="hidden">
            <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
              <p id="errorText"></p>
            </div>
          </div>

          <button
            type="submit"
            id="loginButton"
            class="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-semibold py-3 px-6 rounded-lg hover:from-blue-700 hover:to-indigo-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 transform hover:scale-105"
          >
            <span id="buttonText">Sign In</span>
            <span id="loadingSpinner" class="hidden">
              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Signing in...
            </span>
          </button>
        </form>

        <div class="mt-6 text-center">
          <p class="text-sm text-gray-600">
            Don't have an account? 
            <a href="/register" class="text-blue-600 hover:text-blue-700 font-medium">
              Contact your administrator
            </a>
          </p>
        </div>
      </div>

      <!-- Demo Credentials -->
      <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h3 class="text-sm font-medium text-blue-800 mb-2">Demo Credentials</h3>
        <div class="text-xs text-blue-700 space-y-1">
          <p><strong>Admin:</strong> admin@times10.com / admin123</p>
          <p><strong>Manager:</strong> manager@times10.com / manager123</p>
          <p><strong>User:</strong> user@times10.com / user123</p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.getElementById('loginForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const form = e.target as HTMLFormElement;
    const email = (form.elements.namedItem('email') as HTMLInputElement).value;
    const password = (form.elements.namedItem('password') as HTMLInputElement).value;
    
    const button = document.getElementById('loginButton') as HTMLButtonElement;
    const buttonText = document.getElementById('buttonText') as HTMLSpanElement;
    const loadingSpinner = document.getElementById('loadingSpinner') as HTMLSpanElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
    const errorText = document.getElementById('errorText') as HTMLParagraphElement;
    
    // Show loading state
    button.disabled = true;
    buttonText.classList.add('hidden');
    loadingSpinner.classList.remove('hidden');
    errorMessage.classList.add('hidden');
    
    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
      });
      
      const data = await response.json();
      
      if (data.success) {
        // Redirect based on user role
        if (data.user.role === 'admin') {
          window.location.href = '/admin';
        } else if (data.user.role === 'manager') {
          window.location.href = '/manager';
        } else {
          window.location.href = '/dashboard';
        }
      } else {
        // Show error message
        errorText.textContent = data.error || 'Login failed';
        errorMessage.classList.remove('hidden');
      }
    } catch (error) {
      console.error('Login error:', error);
      errorText.textContent = 'Network error. Please try again.';
      errorMessage.classList.remove('hidden');
    } finally {
      // Reset button state
      button.disabled = false;
      buttonText.classList.remove('hidden');
      loadingSpinner.classList.add('hidden');
    }
  });
</script> 