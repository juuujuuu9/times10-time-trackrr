---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { requireRole } from '../../utils/session';

// Get current user
const user = await requireRole('admin', '/dashboard')(Astro) as any;
---

<AdminLayout title="Dashboard" currentPage="dashboard">
  <div class="space-y-8">
    <!-- Welcome Header -->
    <div class="bg-gradient-to-r from-gray-50 to-white rounded-xl shadow-lg p-8 text-gray-900 border border-gray-300">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-3xl font-bold mb-2">Welcome back, {user?.name ? user.name.split(' ')[0] : 'Admin'}! 👋</h1>
          <p class="text-gray-900 text-lg">Manage your time tracking system and monitor activity</p>
          <p class="text-gray-600 text-sm mt-2">Logged in as: {user?.email || 'Unknown'}</p>
        </div>
        <div class="text-right">
          <div class="text-4xl mb-2">📊</div>
          <div class="text-sm text-gray-700">Dashboard Overview</div>
        </div>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      <div class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl">
            <span class="text-2xl text-gray-700">👤</span>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Team Members</p>
            <p class="text-3xl font-bold text-gray-900" id="user-count">-</p>
            <div class="flex items-center mt-1">
              <span class="text-gray-500 text-sm">↗</span>
              <span class="text-gray-500 text-xs ml-1">+12%</span>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl">
            <span class="text-2xl text-gray-700">👥</span>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Clients</p>
            <p class="text-3xl font-bold text-gray-900" id="client-count">-</p>
            <div class="flex items-center mt-1">
              <span class="text-gray-500 text-sm">↗</span>
              <span class="text-gray-500 text-xs ml-1">+8%</span>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl">
            <span class="text-2xl text-gray-700">📁</span>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Projects</p>
            <p class="text-3xl font-bold text-gray-900" id="project-count">-</p>
            <div class="flex items-center mt-1">
              <span class="text-gray-500 text-sm">↗</span>
              <span class="text-gray-500 text-xs ml-1">+15%</span>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl">
            <span class="text-2xl text-gray-700">✅</span>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Tasks</p>
            <p class="text-3xl font-bold text-gray-900" id="task-count">-</p>
            <div class="flex items-center mt-1">
              <span class="text-gray-500 text-sm">↗</span>
              <span class="text-gray-500 text-xs ml-1">+23%</span>
            </div>
          </div>
        </div>
      </div>
    </div>



    <!-- Quick Actions -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      <a href="/admin/clients" class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105 group">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl group-hover:scale-110 transition-transform duration-200">
            <span class="text-2xl text-gray-700">👥</span>
          </div>
          <div class="ml-4">
            <h3 class="font-semibold text-gray-900 text-lg">Manage Clients</h3>
            <p class="text-sm text-gray-600 mt-1">Add, edit, and organize clients</p>
            <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
              <span>Get Started</span>
              <span class="ml-1 group-hover:translate-x-1 transition-transform">→</span>
            </div>
          </div>
        </div>
      </a>

      <a href="/admin/projects" class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105 group">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl group-hover:scale-110 transition-transform duration-200">
            <span class="text-2xl text-gray-700">📁</span>
          </div>
          <div class="ml-4">
            <h3 class="font-semibold text-gray-900 text-lg">Manage Projects</h3>
            <p class="text-sm text-gray-600 mt-1">Create and organize projects</p>
            <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
              <span>Get Started</span>
              <span class="ml-1 group-hover:translate-x-1 transition-transform">→</span>
            </div>
          </div>
        </div>
      </a>

      <a href="/admin/reports" class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105 group">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-gray-200 to-gray-100 rounded-xl group-hover:scale-110 transition-transform duration-200">
            <span class="text-2xl text-gray-700">📈</span>
          </div>
          <div class="ml-4">
            <h3 class="font-semibold text-gray-900 text-lg">View Reports</h3>
            <p class="text-sm text-gray-600 mt-1">Analyze time tracking data</p>
            <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
              <span>Get Started</span>
              <span class="ml-1 group-hover:translate-x-1 transition-transform">→</span>
            </div>
          </div>
        </div>
      </a>

      <button id="addOngoingTimersBtn" class="bg-white rounded-xl shadow-sm border border-gray-300 p-6 hover:shadow-lg transition-all duration-200 transform hover:scale-105 group text-left">
        <div class="flex items-center">
          <div class="p-3 bg-gradient-to-r from-blue-200 to-blue-100 rounded-xl group-hover:scale-110 transition-transform duration-200">
            <span class="text-2xl text-blue-700">⏱️</span>
          </div>
          <div class="ml-4">
            <h3 class="font-semibold text-gray-900 text-lg">Add Ongoing Timers</h3>
            <p class="text-sm text-gray-600 mt-1">Start timers for all users</p>
            <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
              <span>Add Timers</span>
              <span class="ml-1 group-hover:translate-x-1 transition-transform">→</span>
            </div>
          </div>
        </div>
      </button>

    </div>


  </div>
</AdminLayout>

<script>
  // Load dashboard data
  async function loadDashboardData() {
    try {
      // Load data from individual API endpoints
      const [usersResponse, clientsResponse, projectsResponse, tasksResponse] = await Promise.all([
        fetch('/api/admin/users'),
        fetch('/api/admin/clients'),
        fetch('/api/admin/projects'),
        fetch('/api/admin/tasks')
      ]);
      
      // Update counts
      const userCountEl = document.getElementById('user-count');
      const clientCountEl = document.getElementById('client-count');
      const projectCountEl = document.getElementById('project-count');
      const taskCountEl = document.getElementById('task-count');
      
      if (usersResponse.ok) {
        const users = await usersResponse.json();
        if (userCountEl) userCountEl.textContent = users.length;
      }
      
      if (clientsResponse.ok) {
        const clients = await clientsResponse.json();
        if (clientCountEl) clientCountEl.textContent = clients.length;
      }
      
      if (projectsResponse.ok) {
        const projects = await projectsResponse.json();
        if (projectCountEl) projectCountEl.textContent = projects.length;
      }
      
      if (tasksResponse.ok) {
        const tasks = await tasksResponse.json();
        if (taskCountEl) taskCountEl.textContent = tasks.length;
      }
    } catch (error) {
      console.error('Error loading dashboard data:', error);
      // Set default values if API calls fail
      const userCountEl = document.getElementById('user-count');
      const clientCountEl = document.getElementById('client-count');
      const projectCountEl = document.getElementById('project-count');
      const taskCountEl = document.getElementById('task-count');
      
      if (userCountEl) userCountEl.textContent = '0';
      if (clientCountEl) clientCountEl.textContent = '0';
      if (projectCountEl) projectCountEl.textContent = '0';
      if (taskCountEl) taskCountEl.textContent = '0';
    }
  }

  // Load data when page loads
  document.addEventListener('DOMContentLoaded', loadDashboardData);

  // Add ongoing timers functionality
  const addOngoingTimersBtn = document.getElementById('addOngoingTimersBtn') as HTMLButtonElement;
  if (addOngoingTimersBtn) {
    addOngoingTimersBtn.addEventListener('click', async () => {
      if (confirm('Are you sure you want to add ongoing timers for all users? This will create tasks and start timers for each active user.')) {
        try {
          addOngoingTimersBtn.disabled = true;
          addOngoingTimersBtn.innerHTML = `
            <div class="flex items-center">
              <div class="p-3 bg-gradient-to-r from-blue-200 to-blue-100 rounded-xl">
                <span class="text-2xl text-blue-700">⏱️</span>
              </div>
              <div class="ml-4">
                <h3 class="font-semibold text-gray-900 text-lg">Adding Timers...</h3>
                <p class="text-sm text-gray-600 mt-1">Please wait</p>
                <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
                  <span>Processing</span>
                  <span class="ml-1 animate-spin">⟳</span>
                </div>
              </div>
            </div>
          `;

          const response = await fetch('/api/add-ongoing-timers', {
            method: 'POST',
            credentials: 'include'
          });

          const result = await response.json();

          if (result.success) {
            alert(`Success! Added ${result.summary.addedTimers.length} ongoing timers for ${result.summary.usersWithTimers} users.`);
            // Reload dashboard data to show updated counts
            loadDashboardData();
          } else {
            alert(`Error: ${result.message}`);
          }
        } catch (error) {
          console.error('Error adding ongoing timers:', error);
          alert('Error adding ongoing timers. Please try again.');
        } finally {
          // Reset button
          addOngoingTimersBtn.disabled = false;
          addOngoingTimersBtn.innerHTML = `
            <div class="flex items-center">
              <div class="p-3 bg-gradient-to-r from-blue-200 to-blue-100 rounded-xl group-hover:scale-110 transition-transform duration-200">
                <span class="text-2xl text-blue-700">⏱️</span>
              </div>
              <div class="ml-4">
                <h3 class="font-semibold text-gray-900 text-lg">Add Ongoing Timers</h3>
                <p class="text-sm text-gray-600 mt-1">Start timers for all users</p>
                <div class="flex items-center mt-2 text-gray-600 text-sm font-medium">
                  <span>Add Timers</span>
                  <span class="ml-1 group-hover:translate-x-1 transition-transform">→</span>
                </div>
              </div>
            </div>
          `;
        }
      }
    });
  }
</script> 