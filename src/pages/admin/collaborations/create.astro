---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { db } from '../../../db/index';
import { teams, teamMembers as teamMembersTable, users, projects } from '../../../db/schema';
import { eq, and, desc } from 'drizzle-orm';
import { getSessionUser } from '../../../utils/session';

// Get current user
const currentUser = await getSessionUser(Astro);
if (!currentUser || (currentUser.role !== 'admin' && currentUser.role !== 'developer')) {
  return Astro.redirect('/login');
}

// Get all users for member selection
const allUsers = await db.query.users.findMany({
  where: eq(users.status, 'active'),
  orderBy: [users.name]
});

// Get all projects for project linking
const allProjects = await db.query.projects.findMany({
  where: eq(projects.archived, false),
  with: {
    client: true
  },
  orderBy: [projects.name]
});

let successMessage = '';
let errorMessage = '';

// Handle form submission
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const name = formData.get('name') as string;
    const description = formData.get('description') as string;
    const projectId = formData.get('projectId') as string;
    const memberIds = formData.getAll('members') as string[];
    
    if (!name || !description) {
      throw new Error('Name and description are required');
    }
    
    // Create the team
    const [newTeam] = await db.insert(teams).values({
      name,
      description,
      createdBy: currentUser.id,
      createdAt: new Date(),
      updatedAt: new Date(),
      archived: false
    }).returning();
    
    // Add members to the team
    if (memberIds.length > 0) {
      const memberInserts = memberIds.map(memberId => ({
        teamId: newTeam.id,
        userId: parseInt(memberId),
        role: 'member',
        joinedAt: new Date()
      }));
      
      await db.insert(teamMembersTable).values(memberInserts);
    }
    
    // Link to project if selected
    if (projectId && projectId !== '') {
      // Update the team name to include project reference
      await db.update(teams)
        .set({ 
          name: `${name} - ${allProjects.find(p => p.id === parseInt(projectId))?.name}`,
          updatedAt: new Date()
        })
        .where(eq(teams.id, newTeam.id));
    }
    
    successMessage = 'Collaboration created successfully!';
    
    // Redirect to the new collaboration page
    return Astro.redirect(`/admin/collaborations/${newTeam.id}`);
    
  } catch (err) {
    console.error('Error creating collaboration:', err);
    errorMessage = err instanceof Error ? err.message : 'Failed to create collaboration';
  }
}
---

<AdminLayout title="Create Collaboration" currentPage="collaborations">
  <div class="space-y-6">
    <!-- Header -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">Create New Collaboration</h1>
        <p class="text-gray-600">Set up a new collaboration for team-based work</p>
      </div>
      <a 
        href="/admin/collaborations"
        class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to Collaborations
      </a>
    </div>

    <!-- Success/Error Messages -->
    {successMessage && (
      <div class="bg-green-50 border border-green-200 rounded-lg p-4">
        <div class="flex items-center">
          <svg class="h-5 w-5 text-green-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <p class="text-green-800">{successMessage}</p>
        </div>
      </div>
    )}

    {errorMessage && (
      <div class="bg-red-50 border border-red-200 rounded-lg p-4">
        <div class="flex items-center">
          <svg class="h-5 w-5 text-red-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 19.5c-.77.833.192 2.5 1.732 2.5z"></path>
          </svg>
          <p class="text-red-800">{errorMessage}</p>
        </div>
      </div>
    )}

    <!-- Create Collaboration Form -->
    <div class="bg-white rounded-lg shadow border border-gray-300">
      <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-lg font-semibold text-gray-900">Collaboration Details</h2>
      </div>
      
      <form method="POST" class="p-6 space-y-6">
        <!-- Basic Information -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
              Collaboration Name *
            </label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500"
              placeholder="Enter collaboration name"
            />
          </div>
          
          <div>
            <label for="projectId" class="block text-sm font-medium text-gray-700 mb-2">
              Link to Project (Optional)
            </label>
            <select
              id="projectId"
              name="projectId"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500"
            >
              <option value="">No project link</option>
              {allProjects.map((project: any) => (
                <option value={project.id}>{project.name} ({project.client?.name || 'No client'})</option>
              ))}
            </select>
          </div>
        </div>
        
        <div>
          <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
            Description *
          </label>
          <textarea
            id="description"
            name="description"
            required
            rows="4"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500"
            placeholder="Describe the purpose and goals of this collaboration"
          ></textarea>
        </div>
        
        <!-- Team Members -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Team Members
          </label>
          <div class="space-y-2 max-h-48 overflow-y-auto border border-gray-300 rounded-lg p-4">
            {allUsers.map(user => (
              <label class="flex items-center space-x-3">
                <input
                  type="checkbox"
                  name="members"
                  value={user.id}
                  class="h-4 w-4 text-gray-600 focus:ring-gray-500 border-gray-300 rounded"
                />
                <div class="flex-1">
                  <div class="text-sm font-medium text-gray-900">{user.name}</div>
                  <div class="text-sm text-gray-500">{user.email}</div>
                </div>
              </label>
            ))}
          </div>
          <p class="text-sm text-gray-500 mt-2">
            Select team members who will participate in this collaboration. You can add more members later.
          </p>
        </div>
        
        <!-- Form Actions -->
        <div class="flex items-center justify-end space-x-4 pt-6 border-t border-gray-200">
          <a
            href="/admin/collaborations"
            class="px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200"
          >
            Cancel
          </a>
          <button
            type="submit"
            class="px-6 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md transform hover:scale-105"
          >
            Create Collaboration
          </button>
        </div>
      </form>
    </div>
  </div>
</AdminLayout>
