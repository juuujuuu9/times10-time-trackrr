openapi: 3.0.3
info:
  title: Times10 Time Tracker API
  version: 1.0.0
  description: API for Times10 Time Tracker application
servers:
  - url: /
    description: Local development server
  - url: https://your-production-domain.com
    description: Production server

paths:
  /api/time-entries-unified:
    get:
      operationId: listTimeEntries
      summary: List time entries
      description: Get time entries with optional filtering
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Filter by user ID
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
          description: Maximum number of entries to return
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeEntryWithDetails'
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      operationId: createTimeEntry
      summary: Create a new time entry
      description: Create a new time entry with start and end times
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
      responses:
        '201':
          description: Time entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TimeEntry'
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/time-entries-unified/{id}:
    get:
      operationId: getTimeEntry
      summary: Get a specific time entry
      description: Retrieve a time entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: Time entry ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TimeEntry'
        '404':
          description: Time entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      operationId: updateTimeEntry
      summary: Update a time entry
      description: Update an existing time entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: Time entry ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryRequest'
      responses:
        '200':
          description: Time entry updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TimeEntry'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Time entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      operationId: deleteTimeEntry
      summary: Delete a time entry
      description: Delete a time entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: Time entry ID
      responses:
        '200':
          description: Time entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Time entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timers/ongoing:
    post:
      operationId: startTimer
      summary: Start an ongoing timer
      description: Start a new ongoing timer for a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTimerRequest'
      responses:
        '200':
          description: Timer started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/OngoingTimer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timers/ongoing/stop:
    post:
      operationId: stopTimer
      summary: Stop an ongoing timer
      description: Stop the current ongoing timer and create a time entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTimerRequest'
      responses:
        '200':
          description: Timer stopped successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TimeEntry'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timers/user-ongoing:
    get:
      operationId: getOngoingTimer
      summary: Get user's ongoing timer
      description: Get the current ongoing timer for a user
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: User ID (optional, defaults to current user)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/OngoingTimer'
                      - type: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TimeEntry:
      type: object
      required:
        - id
        - userId
        - taskId
        - startTime
        - endTime
        - durationManual
        - notes
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
          description: Time entry ID
        userId:
          type: integer
          format: int32
          description: User ID
        taskId:
          type: integer
          format: int32
          description: Task/Project ID
        startTime:
          type: string
          format: date-time
          nullable: true
          description: Start time in ISO format
        endTime:
          type: string
          format: date-time
          nullable: true
          description: End time in ISO format
        durationManual:
          type: integer
          format: int32
          nullable: true
          minimum: 0
          description: Manual duration in seconds
        notes:
          type: string
          nullable: true
          description: Time entry notes
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    TimeEntryWithDetails:
      allOf:
        - $ref: '#/components/schemas/TimeEntry'
        - type: object
          properties:
            userName:
              type: string
              description: User name
            taskName:
              type: string
              description: Task name
            projectName:
              type: string
              description: Project name
            clientName:
              type: string
              description: Client name
            duration:
              type: integer
              format: int32
              minimum: 0
              description: Calculated duration in seconds

    CreateTimeEntryRequest:
      type: object
      required:
        - userId
        - taskId
        - startTime
        - endTime
      properties:
        userId:
          type: integer
          format: int32
          description: User ID
        taskId:
          type: integer
          format: int32
          description: Task/Project ID
        startTime:
          type: string
          format: date-time
          description: Start time in ISO format
        endTime:
          type: string
          format: date-time
          description: End time in ISO format
        durationManual:
          type: integer
          format: int32
          minimum: 0
          description: Manual duration in seconds
        notes:
          type: string
          description: Time entry notes

    UpdateTimeEntryRequest:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: Start time in ISO format
        endTime:
          type: string
          format: date-time
          description: End time in ISO format
        durationManual:
          type: integer
          format: int32
          nullable: true
          minimum: 0
          description: Manual duration in seconds
        notes:
          type: string
          nullable: true
          description: Time entry notes

    StartTimerRequest:
      type: object
      required:
        - taskId
        - clientTime
      properties:
        taskId:
          type: integer
          format: int32
          description: Task/Project ID
        notes:
          type: string
          description: Timer notes
        clientTime:
          type: integer
          format: int64
          description: Client timestamp

    StopTimerRequest:
      type: object
      required:
        - timerId
      properties:
        timerId:
          type: integer
          format: int32
          description: Timer ID

    OngoingTimer:
      type: object
      required:
        - id
        - userId
        - taskId
        - startTime
        - notes
        - createdAt
      properties:
        id:
          type: integer
          format: int32
          description: Timer ID
        userId:
          type: integer
          format: int32
          description: User ID
        taskId:
          type: integer
          format: int32
          description: Task/Project ID
        startTime:
          type: string
          format: date-time
          description: Start time in ISO format
        notes:
          type: string
          nullable: true
          description: Timer notes
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Additional error details
