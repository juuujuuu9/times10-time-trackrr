document.addEventListener("DOMContentLoaded",function(){const h=document.getElementById("createProjectBtn"),w=document.getElementById("projectForm"),E=document.getElementById("search"),v=document.getElementById("clientFilter");h&&h.addEventListener("click",()=>{const t=document.getElementById("projectModalTitle"),e=document.getElementById("projectId"),s=document.getElementById("projectName"),o=document.getElementById("projectClient"),n=document.getElementById("projectModal");t&&(t.textContent="Add New Project"),e&&(e.value=""),s&&(s.value=""),o&&(o.value=""),n&&(n.classList.remove("hidden"),n.style.display="block")}),w&&w.addEventListener("submit",async t=>{t.preventDefault();const e=document.getElementById("projectId")?.value,s=document.getElementById("projectName")?.value,o=document.getElementById("projectClient")?.value;console.log("Form submission:",{projectId:e,projectName:s,projectClient:o});const n=e?"PUT":"POST";console.log("Using method:",n);try{const a=await fetch("/api/admin/projects",{method:n,headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e,name:s,clientId:parseInt(o)})});if(console.log("Response status:",a.status),a.ok)console.log("Success! Reloading page..."),window.location.reload();else{const r=await a.text();console.error("Error response:",r),alert("Error saving project")}}catch(a){console.error("Error:",a),alert("Error saving project")}});function A(){const t=document.getElementById("projectModal");t&&(t.classList.add("hidden"),t.style.display="none")}function L(t){const e=document.getElementById("projectModalTitle"),s=document.getElementById("projectId"),o=document.getElementById("projectName"),n=document.getElementById("projectClient"),a=document.getElementById("projectModal");fetch(`/api/admin/projects/${t}`).then(r=>{if(r.ok)return r.json();throw new Error("Error loading project details")}).then(r=>{e&&(e.textContent="Edit Project"),s&&(s.value=r.id.toString()),o&&(o.value=r.name),n&&(n.value=r.clientId.toString()),a&&(a.classList.remove("hidden"),a.style.display="block")}).catch(r=>{console.error("Error:",r),alert("Error loading project details")})}function x(t){confirm("Are you sure you want to delete this project?")&&fetch(`/api/admin/projects/${t}`,{method:"DELETE"}).then(e=>{e.ok?window.location.reload():alert("Error deleting project")}).catch(e=>{console.error("Error:",e),alert("Error deleting project")})}window.closeProjectModal=A,window.editProject=L,window.deleteProject=x,document.addEventListener("keydown",t=>{if(t.key==="Escape"){const e=document.getElementById("projectModal");e&&!e.classList.contains("hidden")&&window.closeProjectModal();const s=document.getElementById("clientModal");s&&!s.classList.contains("hidden")&&window.closeClientModal()}});const p=document.getElementById("projectModal");p&&p.addEventListener("click",t=>{t.target===p&&window.closeProjectModal()});const b=document.getElementById("cancelProjectBtn");b&&b.addEventListener("click",()=>{window.closeProjectModal()});const f=document.getElementById("clientModal");f&&f.addEventListener("click",t=>{t.target===f&&window.closeClientModal()});const I=document.getElementById("createClientBtn"),j=document.getElementById("clientForm");I&&I.addEventListener("click",()=>{const t=document.getElementById("clientModal"),e=document.getElementById("clientName");e&&(e.value=""),t&&(t.classList.remove("hidden"),t.style.display="block")}),j&&j.addEventListener("submit",async t=>{t.preventDefault();const e=document.getElementById("clientName")?.value;try{const s=await fetch("/api/admin/clients",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e})});if(s.ok){const o=await s.json(),n=document.getElementById("projectClient");if(n){const a=document.createElement("option");a.value=o.id.toString(),a.textContent=o.name,n.appendChild(a),n.value=o.id.toString()}window.closeClientModal()}else alert("Error creating client")}catch(s){console.error("Error:",s),alert("Error creating client")}}),window.closeClientModal=function(){const t=document.getElementById("clientModal");t&&(t.classList.add("hidden"),t.style.display="none")},E&&E.addEventListener("input",t=>{const s=t.target.value.toLowerCase();document.querySelectorAll("tbody tr").forEach(n=>{const r=n.querySelector("td:first-child")?.textContent?.toLowerCase()||"";n.style.display=r.includes(s)?"":"none"})}),document.addEventListener("click",t=>{const e=t.target;if(e.classList.contains("edit-project-btn")){const s=parseInt(e.getAttribute("data-project-id")||"0");window.editProject(s);return}if(e.closest(".edit-project-btn")){const s=e.closest(".edit-project-btn"),o=parseInt(s.getAttribute("data-project-id")||"0");window.editProject(o);return}if(e.classList.contains("delete-project-btn")){const s=parseInt(e.getAttribute("data-project-id")||"0");window.deleteProject(s);return}if(e.id==="cancelProjectBtn"){window.closeProjectModal();return}if(e.id==="cancelClientBtn"){window.closeClientModal();return}}),v&&(document.querySelectorAll(".bg-gray-800.rounded-lg.shadow.border.border-gray-700.overflow-hidden").forEach(e=>{e.getAttribute("data-archived")==="true"&&(e.style.display="none")}),v.addEventListener("change",e=>{const o=e.target.value;document.querySelectorAll(".bg-gray-800.rounded-lg.shadow.border.border-gray-700.overflow-hidden").forEach(a=>{const r=a.querySelector("h3")?.textContent||"",d=a.getAttribute("data-archived")==="true";o?o==="archived"?a.style.display=d?"":"none":a.style.display=r===o?"":"none":a.style.display=d?"none":""})}));let l=null,g=[];async function S(){try{const t=await fetch("/api/admin/users");t.ok&&(g=await t.json())}catch(t){console.error("Error loading users:",t)}}async function m(t){try{const e=await fetch(`/api/admin/projects/${t}/tasks`);if(e.ok){const s=await e.json();C(s)}else console.error("Error loading tasks")}catch(e){console.error("Error loading tasks:",e)}}function C(t){const e=document.getElementById("tasksList");if(e){if(t.length===0){e.innerHTML=`
          <div class="text-center py-8">
            <div class="text-4xl mb-2">ðŸ“‹</div>
            <p class="text-gray-300">No tasks yet for this project</p>
            <p class="text-gray-400 text-sm">Click "Add Task" to create the first task</p>
          </div>
        `;return}e.innerHTML=t.map((s,o)=>`
        <div class="bg-gray-700 rounded-lg p-4 border border-gray-600" data-task-id="${s.id}" data-assigned-user-ids="${s.assignedUserIds||""}">
          <div class="flex justify-between items-start mb-2">
            <h5 class="font-medium text-white">${s.name}</h5>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${s.status==="completed"?"bg-green-600 text-white":s.status==="in-progress"?"bg-blue-600 text-white":s.status==="cancelled"?"bg-red-600 text-white":"bg-yellow-600 text-white"}">
              ${s.status.replace("-"," ")}
            </span>
          </div>
          ${s.description?`<p class="text-gray-300 text-sm mb-2">${s.description}</p>`:""}
          <div class="flex justify-between items-center text-sm mb-3">
            <div class="text-gray-400">
              ${s.assignedUsers?`Assigned to: ${s.assignedUsers}`:"No assignments"}
            </div>
            <div class="text-gray-400">
              ${s.totalHours?Math.round(s.totalHours*10)/10:0} hours
            </div>
          </div>
          
          <!-- User Assignment Section -->
          <div class="border-t border-gray-600 pt-3">
            <div class="flex items-center space-x-2 mb-2">
              <div class="flex-1 relative">
                <input
                  type="text"
                  id="userSearch-${s.id}"
                  placeholder="Search users to assign..."
                  class="w-full px-3 py-2 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#4F46E5] bg-gray-700 text-white text-sm"
                />
                <div id="userSuggestions-${s.id}" class="absolute z-10 w-full bg-gray-800 border border-gray-600 rounded-md mt-1 max-h-32 overflow-y-auto hidden">
                  <!-- Suggestions will appear here -->
                </div>
              </div>
              <button
                type="button"
                class="assign-user-btn px-3 py-2 bg-[#4F46E5] hover:bg-[#3730A3] text-white rounded-md transition-colors text-sm"
                data-task-id="${s.id}"
                data-task-name="${s.name}"
              >
                Assign
              </button>
            </div>
            <div id="assignedUsers-${s.id}" class="flex flex-wrap gap-2">
              ${s.assignedUserIds?s.assignedUserIds.split(",").map(n=>{const a=g.find(r=>r.id.toString()===n.trim());return a?`
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs bg-[#4F46E5] text-white">
                    ${a.name}
                    <button
                      type="button"
                      class="ml-1 remove-user-btn"
                      data-task-id="${s.id}"
                      data-user-id="${a.id}"
                      data-user-name="${a.name}"
                    >
                      Ã—
                    </button>
                  </span>
                `:""}).join(""):""}
            </div>
          </div>
        </div>
      `).join(""),t.forEach(s=>{const o=document.getElementById(`userSearch-${s.id}`),n=document.getElementById(`userSuggestions-${s.id}`),a=document.querySelector(`[data-task-id="${s.id}"].assign-user-btn`);console.log("Looking for assign button for task",s.id,"Found:",a),a&&a.addEventListener("click",r=>{console.log("Assign button clicked directly!"),r.preventDefault(),r.stopPropagation();const d=parseInt(a.getAttribute("data-task-id")||"0"),c=document.getElementById(`userSearch-${d}`),i=c?.getAttribute("data-selected-user-id"),u=c?.getAttribute("data-selected-user-name");if(console.log("Direct assign button clicked:",{taskId:d,selectedUserId:i,selectedUserName:u}),i&&u){console.log("Calling assignUserToTask directly with:",{taskId:d,selectedUserId:i,selectedUserName:u});try{window.assignUserToTask(d,parseInt(i),u),c.value="",c.removeAttribute("data-selected-user-id"),c.removeAttribute("data-selected-user-name")}catch(q){console.error("Error calling assignUserToTask:",q),alert("Error assigning user to task")}}else alert("Please select a user first")}),o&&n&&(o.addEventListener("input",r=>{console.log("Search input event triggered:",r.target.value);const d=r.target.value.toLowerCase();if(console.log("Query:",d),d.length<2){console.log("Query too short, hiding suggestions"),n.classList.add("hidden");return}const c=g.filter(i=>i.name.toLowerCase().includes(d)||i.email.toLowerCase().includes(d));console.log("Filtered users:",c),c.length>0?(n.innerHTML=c.map(i=>`
                <div
                  class="px-3 py-2 hover:bg-gray-700 cursor-pointer text-white text-sm user-suggestion"
                  data-user-id="${i.id}"
                  data-user-name="${i.name}"
                  data-user-email="${i.email}"
                >
                  ${i.name} (${i.email})
                </div>
              `).join(""),n.classList.remove("hidden")):n.classList.add("hidden")}),n.addEventListener("click",r=>{console.log("Suggestion div clicked:",r.target);const d=r.target;if(console.log("Target element:",d),console.log("Target classes:",d.classList.toString()),console.log("Contains user-suggestion:",d.classList.contains("user-suggestion")),d.classList.contains("user-suggestion")){const c=d.getAttribute("data-user-id"),i=d.getAttribute("data-user-name"),u=d.getAttribute("data-user-email");console.log("User selected:",{userId:c,userName:i,userEmail:u}),c&&i&&(o.value=i,n.classList.add("hidden"),o.setAttribute("data-selected-user-id",c),o.setAttribute("data-selected-user-name",i),console.log("User stored in input:",{"data-selected-user-id":o.getAttribute("data-selected-user-id"),"data-selected-user-name":o.getAttribute("data-selected-user-name")}),setTimeout(()=>{console.log("Verification - User stored in input:",{"data-selected-user-id":o.getAttribute("data-selected-user-id"),"data-selected-user-name":o.getAttribute("data-selected-user-name")})},100),console.log("Search input element after selection:",o),console.log("Search input ID:",o.id))}}),document.addEventListener("click",r=>{!o.contains(r.target)&&!n.contains(r.target)&&n.classList.add("hidden")}))})}}function U(t,e){l=t;const s=document.getElementById("tasksModalTitle"),o=document.getElementById("tasksModal");s&&(s.textContent=`Tasks - ${e}`),o&&(o.classList.remove("hidden"),o.style.display="block"),m(t)}function $(){const t=document.getElementById("tasksModal");t&&(t.classList.add("hidden"),t.style.display="none"),l=null}function N(){const t=document.getElementById("addTaskModal"),e=document.getElementById("taskProjectId"),s=document.getElementById("taskName"),o=document.getElementById("taskDescription"),n=document.getElementById("taskStatus");e&&l&&(e.value=l.toString()),s&&(s.value=""),o&&(o.value=""),n&&(n.value="pending"),P(),t&&(t.classList.remove("hidden"),t.style.display="block")}function T(){const t=document.getElementById("addTaskModal");t&&(t.classList.add("hidden"),t.style.display="none")}function P(){const t=document.getElementById("userAssignments");!t||g.length===0||(t.innerHTML=g.map(e=>`
        <label class="flex items-center space-x-2">
          <input
            type="checkbox"
            value="${e.id}"
            class="rounded border-gray-600 text-[#4F46E5] focus:ring-[#4F46E5] bg-gray-700"
          />
          <span class="text-gray-300">${e.name} (${e.email})</span>
        </label>
      `).join(""))}async function F(t){t.preventDefault();const e=document.getElementById("taskName")?.value,s=document.getElementById("taskDescription")?.value,o=document.getElementById("taskStatus")?.value,n=document.getElementById("taskProjectId")?.value,a=Array.from(document.querySelectorAll('#userAssignments input[type="checkbox"]:checked')).map(r=>parseInt(r.value));try{const r=await fetch("/api/admin/tasks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,description:s||null,projectId:parseInt(n),status:o})});if(r.ok){const d=await r.json();a.length>0&&await fetch("/api/admin/tasks/assign",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({taskId:d.id,userIds:a})}),T(),l&&m(l)}else alert("Error creating task")}catch(r){console.error("Error:",r),alert("Error creating task")}}async function D(t,e,s){try{console.log("assignUserToTask called with:",{taskId:t,userId:e,userName:s});const o=document.querySelector(`[data-task-id="${t}"]`);console.log("Task element found:",o);const n=o?.getAttribute("data-assigned-user-ids")||"",a=n?n.split(",").map(i=>parseInt(i.trim())).filter(i=>!isNaN(i)):[];if(console.log("Current assignments:",{currentAssignedUserIds:n,currentUserIds:a}),a.includes(e)){alert(`${s} is already assigned to this task`);return}const r=[...a,e];console.log("Updated user IDs:",r);const d={taskId:t,userIds:r};console.log("Sending request:",d);const c=await fetch("/api/admin/tasks/assign",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d)});if(console.log("Response status:",c.status),c.ok)console.log("Assignment successful, reloading tasks..."),l&&m(l);else{const i=await c.text();console.error("Error response:",i),alert("Error assigning user to task")}}catch(o){console.error("Error in assignUserToTask:",o),alert("Error assigning user to task")}}async function O(t,e,s){try{const n=document.querySelector(`[data-task-id="${t}"]`)?.getAttribute("data-assigned-user-ids")||"",r=(n?n.split(",").map(c=>parseInt(c.trim())).filter(c=>!isNaN(c)):[]).filter(c=>c!==e);(await fetch("/api/admin/tasks/assign",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({taskId:t,userIds:r})})).ok?l&&m(l):alert("Error removing user from task")}catch(o){console.error("Error:",o),alert("Error removing user from task")}}window.showTasksModal=U,window.closeTasksModal=$,window.showAddTaskModal=N,window.closeAddTaskModal=T,window.assignUserToTask=D,window.removeUserFromTask=O,S(),document.addEventListener("click",t=>{const e=t.target;if(console.log("Click detected on:",e.tagName,e.className,e.id),console.log("Target classes:",e.classList.toString()),console.log("Target contains assign-user-btn:",e.classList.contains("assign-user-btn")),e.tagName==="BUTTON"&&(console.log("Button clicked:",e),console.log("Button classes:",e.classList.toString()),console.log("Button text:",e.textContent)),e.classList.contains("view-tasks-btn")){const s=parseInt(e.getAttribute("data-project-id")||"0"),o=e.getAttribute("data-project-name")||"";window.showTasksModal(s,o);return}if(e.id==="addTaskBtn"){window.showAddTaskModal();return}if(e.id==="closeTasksModalBtn"||e.closest("#closeTasksModalBtn")){window.closeTasksModal();return}if(e.id==="cancelAddTaskBtn"){window.closeAddTaskModal();return}if(e.classList.contains("assign-user-btn")){console.log("Assign button detected!");const s=parseInt(e.getAttribute("data-task-id")||"0"),o=document.getElementById(`userSearch-${s}`),n=o?.getAttribute("data-selected-user-id"),a=o?.getAttribute("data-selected-user-name");if(console.log("Assign button clicked:",{taskId:s,selectedUserId:n,selectedUserName:a}),console.log("Search input element:",o),console.log("All data attributes:",{"data-selected-user-id":o?.getAttribute("data-selected-user-id"),"data-selected-user-name":o?.getAttribute("data-selected-user-name")}),n&&a){console.log("Calling assignUserToTask with:",{taskId:s,selectedUserId:n,selectedUserName:a}),console.log("Function exists:",typeof window.assignUserToTask),console.log("Function details:",window.assignUserToTask);try{window.assignUserToTask(s,parseInt(n),a),o.value="",o.removeAttribute("data-selected-user-id"),o.removeAttribute("data-selected-user-name")}catch(r){console.error("Error calling assignUserToTask:",r),alert("Error assigning user to task")}}else alert("Please select a user first");return}if(e.classList.contains("remove-user-btn")){const s=parseInt(e.getAttribute("data-task-id")||"0"),o=parseInt(e.getAttribute("data-user-id")||"0"),n=e.getAttribute("data-user-name")||"";confirm(`Remove ${n} from this task?`)&&window.removeUserFromTask(s,o,n);return}});const B=document.getElementById("addTaskForm");B&&B.addEventListener("submit",F);const M=document.getElementById("closeTasksModalBtn");M&&M.addEventListener("click",()=>{window.closeTasksModal()}),document.addEventListener("keydown",t=>{if(t.key==="Escape"){const e=document.getElementById("tasksModal");e&&!e.classList.contains("hidden")&&window.closeTasksModal();const s=document.getElementById("addTaskModal");s&&!s.classList.contains("hidden")&&window.closeAddTaskModal()}});const y=document.getElementById("tasksModal");y&&y.addEventListener("click",t=>{t.target===y&&window.closeTasksModal()});const k=document.getElementById("addTaskModal");k&&k.addEventListener("click",t=>{t.target===k&&window.closeAddTaskModal()})});
